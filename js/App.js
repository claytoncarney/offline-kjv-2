'use strict';

/*eslint no-unused-vars: ["off"]*/

import { EventBus } from './EventBus.js';
import { AppModel } from './Model/AppModel.js';
import { AppView } from './View/AppView.js';
import { AppController } from './Controller/AppController.js';
import { ReadModel } from './Model/ReadModel.js';
import { PaneRead } from './View/PaneRead.js';
import { PageRead } from './View/PageRead.js';
import { ReadController } from './Controller/ReadController.js';
import { ContentsModel } from './Model/ContentsModel.js';
import { PaneContents } from './View/PaneContents.js';
import { PageContents } from './View/PageContents.js';
import { PageTomes } from './View/PageTomes.js';
import { ContentsController } from './Controller/ContentsController.js';
import { BookmarksModel } from './Model/BookmarksModel.js';
import { PaneBookmarks } from './View/PaneBookmarks.js';
import { PageBookmarks } from './View/PageBookmarks.js';
import { PageFolders } from './View/PageFolders.js';
import { PageFoldersAdd } from './View/PageFoldersAdd.js';
import { PageFoldersDelete } from './View/PageFoldersDelete.js';
import { PageFoldersRename } from './View/PageFoldersRename.js';
import { PageMoveCopy } from './View/PageMoveCopy.js';
import { BookmarksController } from './Controller/BookmarksController.js';
import { SearchModel } from './Model/SearchModel.js';
import { PaneSearch } from './View/PaneSearch.js';
import { PageResults } from './View/PageResults.js';
import { PageFilters } from './View/PageFilters.js';
import { PageHistory } from './View/PageHistory.js';
import { SearchController } from './Controller/SearchController.js';
import { HelpModel } from './Model/HelpModel.js';
import { PaneHelp } from './View/PaneHelp.js';
import { PageHelp } from './View/PageHelp.js';
import { PageSettings } from './View/PageSettings.js';
import { PageTopics } from './View/PageTopics.js';
import { HelpController } from './Controller/HelpController.js';

(function () {
  let bus = new EventBus();
  let appModel = new AppModel(bus);
  let appView = new AppView(bus);
  let appController = new AppController(bus);
  let readModel = new ReadModel(bus);
  let paneRead = new PaneRead(bus);
  let pageRead = new PageRead(bus);
  let readController = new ReadController(bus);
  let contentsModel = new ContentsModel(bus);
  let paneContents = new PaneContents(bus);
  let pageContents = new PageContents(bus);
  let pageTomes = new PageTomes(bus);
  let contentsController = new ContentsController(bus);
  let bookmarksModel = new BookmarksModel(bus);
  let paneBookmarks = new PaneBookmarks(bus);
  let pageBookmarks = new PageBookmarks(bus);
  let pageFolders = new PageFolders(bus);
  let pageFoldersAdd = new PageFoldersAdd(bus);
  let pageFoldersDelete = new PageFoldersDelete(bus);
  let pageFoldersRename = new PageFoldersRename(bus);
  let pageMoveCopy = new PageMoveCopy(bus);
  let bookmarksController = new BookmarksController(bus);
  let searchModel = new SearchModel(bus);
  let paneSearch = new PaneSearch(bus);
  let pageResults = new PageResults(bus);
  let pageFilters = new PageFilters(bus);
  let pageHistory = new PageHistory(bus);
  let searchController = new SearchController(bus);
  let helpModel = new HelpModel(bus);
  let paneHelp = new PaneHelp(bus);
  let pageHelp = new PageHelp(bus);
  let pageSettings = new PageSettings(bus);
  let pageTopics = new PageTopics(bus);
  let helpController = new HelpController(bus);
  appController.initializeApp();
})();
